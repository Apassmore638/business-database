// <auto-generated />
using System;
using DatabaseSite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabaseSite.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250809170138_InitialSchema")]
    partial class InitialSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("DatabaseSite.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Client Id");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT")
                        .HasColumnName("adress");

                    b.Property<string>("ClientFolderId")
                        .HasColumnType("TEXT")
                        .HasColumnName("client folder id");

                    b.Property<string>("EmailOrNumber")
                        .HasColumnType("TEXT")
                        .HasColumnName("email/number");

                    b.Property<double>("LastMargin")
                        .HasColumnType("REAL")
                        .HasColumnName("Last Margin");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("DatabaseSite.Models.CostingSheet", b =>
                {
                    b.Property<int>("SheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Sheet Id");

                    b.Property<int>("JobId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Job #");

                    b.Property<double>("QuoteAmount")
                        .HasColumnType("REAL")
                        .HasColumnName("quote amount");

                    b.Property<string>("client")
                        .HasColumnType("TEXT");

                    b.Property<string>("date")
                        .HasColumnType("TEXT");

                    b.Property<double>("margin")
                        .HasColumnType("REAL");

                    b.HasKey("SheetId");

                    b.ToTable("Costing Sheets");
                });

            modelBuilder.Entity("DatabaseSite.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Job #");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Client Id");

                    b.Property<int>("CostingSheetId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Costing Sheet Id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DriveFolderId")
                        .HasColumnType("TEXT")
                        .HasColumnName("Drive Folder Id");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("JobId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("DatabaseSite.Models.LineItem", b =>
                {
                    b.Property<int>("LineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Line Item Id");

                    b.Property<string>("ItemName")
                        .HasColumnType("TEXT")
                        .HasColumnName("Item name");

                    b.Property<int>("JobId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Job #");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("LineItemId");

                    b.ToTable("Line Items");
                });

            modelBuilder.Entity("DatabaseSite.Models.TriageItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TriageItems");
                });
#pragma warning restore 612, 618
        }
    }
}
